import { PartialType } from '@nestjs/swagger';
import { EnrichmentStatus } from '@prisma/client';
import { PaginationQueryDto } from 'src/core/platform/dtos';
import { PropertyDto } from 'src/decorators';

// Auto generated by tools/generate-dtos.ts at 2025-04-15T07:55:18.796Z
// ****************************** Base TargetPerson response dto ******************************
export class BaseTargetPersonResponseDto {
  @PropertyDto()
  id: number;

  @PropertyDto()
  firstName: string;

  @PropertyDto()
  lastName: string;

  @PropertyDto()
  fullName: string;

  @PropertyDto()
  linkedinProfileUrl: string;

  @PropertyDto()
  email: string;

  @PropertyDto()
  phoneNumber: string;

  @PropertyDto()
  position: string;

  @PropertyDto()
  department: string;

  @PropertyDto()
  enrichmentStatus: EnrichmentStatus;

  @PropertyDto()
  intentScore: number;

  @PropertyDto()
  targetCompanyId: number;

  @PropertyDto()
  createdAt: Date;
}

export class UploadSingleFileBodyDto {
  @PropertyDto({
    type: 'file',
    required: true,
    validated: true,
  })
  file: string;
}

// ****************************** GET TargetPerson dto ******************************
export class GetTargetPersonDetailResponseDto extends BaseTargetPersonResponseDto {
  // Add more fields if needed such as relations
}

export class GetTargetPersonListResponseDto extends BaseTargetPersonResponseDto {
  // Add more fields if needed such as relations
}

export class GetTargetPersonListQueryDto extends PaginationQueryDto {
  @PropertyDto({
    type: String,
    required: false,
    validated: true,
    description: `Search by full name which contain your input`,
  })
  name: string;

  @PropertyDto({
    type: String,
    required: false,
    validated: true,
    description: `Search by position which contain your input`,
  })
  position: string;

  @PropertyDto({
    type: String,
    required: false,
    validated: true,
    description: `Search by department which contain your input`,
  })
  department: string;

  @PropertyDto({
    type: EnrichmentStatus,
    required: false,
    validated: true,
    structure: 'enumArray',
    example: [EnrichmentStatus.Completed],
  })
  enrichmentStatus: EnrichmentStatus[];

  @PropertyDto({
    type: Number,
    required: false,
    validated: true,
  })
  intentScoreRangeStart: number;

  @PropertyDto({
    type: Number,
    required: false,
    validated: true,
  })
  intentScoreRangeEnd: number;

  @PropertyDto({
    type: Number,
    required: false,
    validated: true,
  })
  targetCompanyId: number;

  @PropertyDto({
    type: Date,
    required: false,
    validated: true,
  })
  createdAtRangeStart: Date;

  @PropertyDto({
    type: Date,
    required: false,
    validated: true,
  })
  createdAtRangeEnd: Date;
}

// ****************************** CREATE TargetPerson dto ******************************
export class CreateTargetPersonBodyDto {
  @PropertyDto({
    type: String,
    required: true,
    validated: true,
  })
  firstName: string;

  @PropertyDto({
    type: String,
    required: true,
    validated: true,
  })
  lastName: string;

  @PropertyDto({
    type: String,
    required: true,
    validated: true,
  })
  linkedinProfileUrl: string;

  @PropertyDto({
    type: String,
    required: false,
    validated: true,
  })
  email: string;

  @PropertyDto({
    type: String,
    required: false,
    validated: true,
  })
  phoneNumber: string;

  @PropertyDto({
    type: String,
    required: false,
    validated: true,
  })
  position: string;

  @PropertyDto({
    type: String,
    required: false,
    validated: true,
  })
  department: string;

  @PropertyDto({
    type: Number,
    required: false,
    validated: true,
  })
  targetCompanyId: number;
}

export class CreateTargetPersonResponseDto extends BaseTargetPersonResponseDto {}

// ****************************** UPDATE TargetPerson dto ******************************
export class UpdateTargetPersonBodyDto extends PartialType(CreateTargetPersonBodyDto) {
  // User OmitType if needed
}

export class UpdateTargetPersonResponseDto extends BaseTargetPersonResponseDto {}

// ****************************** Upload TargetPerson ******************************
export class UploadTargetPersonListResponseDto {}

// ****************************** EnrichPerson ******************************
export class EnrichPeopleResponseDto {
  @PropertyDto()
  ids: number[];

  @PropertyDto()
  success: number[];
}

export class EnrichPeopleBodyDto {
  @PropertyDto({
    type: Number,
    required: true,
    validated: true,
    structure: 'array',
  })
  ids: number;
}
